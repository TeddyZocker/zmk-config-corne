/*
╭───────────────────┬───────────────────╮
│ 0  1  2  3  4  5  │ 6  7  8  9  10 11 │
│ 12 13 14 15 16 17 │ 18 19 20 21 22 23 │
│ 24 25 26 27 28 29 │ 30 31 32 33 34 35 │
╰───────╮  36 37 38 │ 39 40 41  ╭───────╯
        ╰───────────┴───────────╯    
*/

#include "macro.dtsi"

/ {
    combos {
        compatible = "zmk,combos";

// def symbols 
        combo_plus {
            timeout-ms = <50>;
	        layers = <1>;
            key-positions = <14 15>;
            bindings = <&kp RBKT>;
        };
 
	    combo_minus {
            timeout-ms = <50>;
	        layers = <1>;
            key-positions = <26 27>;
            bindings = <&kp SLASH>;
        };

        combo_mal {
            timeout-ms = <50>;
	        layers = <1>;
            key-positions = <15 16>;
            bindings = <&kp LS(RBKT)>;
        };

        combo_dividiert {
            timeout-ms = <50>;
	        layers = <1>;
            key-positions = <27 28>;
            bindings = <&kp LS(N7)>;
        };

        combo_doppelpunkt {
            timeout-ms = <50>;
	        layers = <1>;
            key-positions = <1 2>;
            bindings = <&kp GREATER_THAN>;
        };

        combo_strichpunkt {
            timeout-ms = <50>;
	        layers = <1>;
            key-positions = <13 14>;
            bindings = <&kp LESS_THAN>;
        };

// media

        combo_skip {
            timeout-ms = <50>;
	        layers = <1>;
            key-positions = <15 16>;
            bindings = <&kp C_NEXT>;
        };

        combo_back {
            timeout-ms = <50>;
	        layers = <1>;
            key-positions = <14 15>;
            bindings = <&kp C_PREV>;
        };

        combo_pause {
            timeout-ms = <50>;
	        layers = <1>;
            key-positions = <14 15 16>;
            bindings = <&kp C_PLAY_PAUSE>;
        };

        combo_vol_up {
            timeout-ms = <50>;
	        layers = <1>;
            key-positions = <3 16>;
            bindings = <&kp C_VOLUME_UP>;
        };

        combo_vol_down {
            timeout-ms = <50>;
	        layers = <1>;
            key-positions = <3 14>;
            bindings = <&kp C_VOLUME_DOWN>;
        };

        combo_mute {
            timeout-ms = <50>;
	        layers = <1>;
            key-positions = <2 3 4>;
            bindings = <&kp C_MUTE>;
        };



// switch layers
        combo_to3 {
            timeout-ms = <50>;
            layers = <0 1>;
            key-positions = <0 1>;
            bindings = <&to 3>;
        };

        combo_to4 {
            timeout-ms = <50>;
            layers = <0 1>;
            key-positions = <14 37>;
            bindings = <&to 4>;
        };

        combo_to5 {
            timeout-ms = <50>;
            layers = <0 1>;
            key-positions = <16 37>;
            bindings = <&to 5>;
        };

        combo_mo8 {
            timeout-ms = <50>;
            layers = <0 1>;
            key-positions = <13 37>;
            bindings = <&ws>;
        };

        combo_l_to9 {
            timeout-ms = <50>;
            layers = <0 1 10>;
            key-positions = <36 37>;
            bindings = <&to 9>;
        };

        combo_r_to9 {
            timeout-ms = <50>;
            layers = <0 2 10>;
            key-positions = <40 41>;
            bindings = <&to 9>;
        };

        combo_r_to10 {
            timeout-ms = <50>;
            layers = <9>;
            key-positions = <37 38>;
            bindings = <&to 10>;
        };

// res layers

    // functional layers
        combo_res_layers_tog3 {
            timeout-ms = <50>;
            layers = <3 4 5>;
            key-positions = <15 37>;
            bindings = <&to 0>;
        };

        combo_res_layers_r_to0 {
            timeout-ms = <50>;
            layers = <9 10>;
            key-positions = <40 41>;
            bindings = <&to 0>;
        };
    };
};
